Changed to literals to allows reflowing and corrected hyphens

Index: uftp-3.5.1/uftp.1
===================================================================
--- uftp-3.5.1.orig/uftp.1	2011-12-18 23:21:48.848685861 -0800
+++ uftp-3.5.1/uftp.1	2011-12-18 23:22:15.398551656 -0800
@@ -1,22 +1,22 @@
 .TH uftp 1 "10 July 2011" "UFTP 3.5.1"
 .SH NAME
-uftp - Encrypted UDP based ftp with multicast - server
+uftp \- Encrypted UDP based ftp with multicast \- server
 .SH SYNOPSIS
-uftp [ -U ] [ -R txrate ] [ -W txweight ] [ -m min_time ]
-    [ -n ] [ -L logfile ] [ -B udp_buf_size ] [ -Y keytype ]
-    [ -h hashtype ] [ -w sigtype ] [ -c ] [ -k key_file ]
-    [ -K new_key_length ] [ -l ] [ -T ] [ -A announce_time ]
-    [ -S status_time ] [ -a announce_interval ]
-    [ -s status_interval ] [ -r register_interval ]
-    [ -d done_interval ] [ -b mtu ] [ -t ttl ] [ -Q dscp ]
-    [ -z | -Z ] [ -I interface ] [ -p port ]
-    [ -j proxylist_file ] [ -q ] [ -f ] [ -y ]
-    [ -x log_level ] [ -H host[,host...] | -H @hostlist_file
-    | -F restart_file ] [ -X exclude_file ]
-    [ -M pub_multicast_addr ] [ -P priv_multicast_addr ]
-    [ -C cc_config_file ] [ -o ] [ -D dest_name ]
-    [ -E base_dir[,base_dir... ] ]
-    { -i list_file | file [ file... ] }
+uftp [ \-U ] [ \-R txrate ] [ \-W txweight ] [ \-m min_time ]
+    [ \-n ] [ \-L logfile ] [ \-B udp_buf_size ] [ \-Y keytype ]
+    [ \-h hashtype ] [ \-w sigtype ] [ \-c ] [ \-k key_file ]
+    [ \-K new_key_length ] [ \-l ] [ \-T ] [ \-A announce_time ]
+    [ \-S status_time ] [ \-a announce_interval ]
+    [ \-s status_interval ] [ \-r register_interval ]
+    [ \-d done_interval ] [ \-b mtu ] [ \-t ttl ] [ \-Q dscp ]
+    [ \-z | \-Z ] [ \-I interface ] [ \-p port ]
+    [ \-j proxylist_file ] [ \-q ] [ \-f ] [ \-y ]
+    [ \-x log_level ] [ \-H host[,host...] | \-H @hostlist_file
+    | \-F restart_file ] [ \-X exclude_file ]
+    [ \-M pub_multicast_addr ] [ \-P priv_multicast_addr ]
+    [ \-C cc_config_file ] [ \-o ] [ \-D dest_name ]
+    [ \-E base_dir[,base_dir... ] ]
+    { \-i list_file | file [ file... ] }
 .SH DESCRIPTION
 .P
 uftp is the server process of the UFTP suite.  It sends one or more files to one or more receivers via multicast with optional encryption.
@@ -26,13 +26,13 @@
 The following options are supported:
 .TP
 .B \-U
-Send in unicast mode to a single host.  This requires the -H option with a single host specified.  The -t, -M, and -P options are ignored as they are all related to multicast.
+Send in unicast mode to a single host.  This requires the \-H option with a single host specified.  The \-t, \-M, and \-P options are ignored as they are all related to multicast.
 .TP
 .B \-R txrate
-The transmission speed in Kbps.  Specifying -1 for this value results in data being sent as fast as the network interface will allow, and is not compatible with -C.  Using a value of -1 is recommended only if the network path between the server and all clients is as fast as the server\(aqs local interface, and works best in a gigabit environment.   Default is 1000 Kbps.
+The transmission speed in Kbps.  Specifying \-1 for this value results in data being sent as fast as the network interface will allow, and is not compatible with \-C.  Using a value of \-1 is recommended only if the network path between the server and all clients is as fast as the server\(aqs local interface, and works best in a gigabit environment.   Default is 1000 Kbps.
 .TP
 .B \-W txweight
-Sets the maximum file transfer time, expressed as a percentage of the optimal time.  If a value of -1 is given for the -R option, a speed of 100Mpbs is used for the purpose of calculating the max time.  Valid values are 110%-10000%.  Default value is 300%.
+Sets the maximum file transfer time, expressed as a percentage of the optimal time.  If a value of \-1 is given for the \-R option, a speed of 100Mpbs is used for the purpose of calculating the max time.  Valid values are 110%-10000%.  Default value is 300%.
 .TP
 .B \-m min_time
 Specifies the minimum file transfer time.  This value takes precedence over the maximum time, if it is greater.  Valid values are 0-3600 seconds.  Default value is 10 seconds.
@@ -50,32 +50,32 @@
 The symmetric encryption algorithm to use.  All algorithms are used in cipher block chaining (CBC) mode.  Valid values are "des" for DES, "3des" for three key Triple DES, "aes128" for AES-128, "aes256" for AES-256, or "none" to not set up encryption at all.  Default is "none".  Not all installations may support all of these algorithms.
 .TP
 .B \-h hashtype
-The hashing algorithm to use for key derivation and HMAC signatures.  Valid values are "sha1" for SHA-1, and "sha256" for SHA-256.  Defaults to "sha1".  Ignored if -Y is "none".  Not all installations may support all of these algorithms.
+The hashing algorithm to use for key derivation and HMAC signatures.  Valid values are "sha1" for SHA-1, and "sha256" for SHA-256.  Defaults to "sha1".  Ignored if \-Y is "none".  Not all installations may support all of these algorithms.
 .TP
 .B \-w sigtype
-Specifies the type of signature to be applied to encrypted messages.  Valid values are "hmac" to apply an HMAC to the encrypted message, and "rsa" to apply an RSA signature.  HMAC signatures are based off the group master key and ensure the sender of a message is a valid member of the group, but does not guarantee that the message came from a specific group member.  RSA signatures ensure that messages come from a particular member, but is much much slower to calculate than HMAC and creates a larger per-packet overhead.  Default is "hmac".  Ignored if -Y is "none".
+Specifies the type of signature to be applied to encrypted messages.  Valid values are "hmac" to apply an HMAC to the encrypted message, and "rsa" to apply an RSA signature.  HMAC signatures are based off the group master key and ensure the sender of a message is a valid member of the group, but does not guarantee that the message came from a specific group member.  RSA signatures ensure that messages come from a particular member, but is much much slower to calculate than HMAC and creates a larger per-packet overhead.  Default is "hmac".  Ignored if \-Y is "none".
 .TP
 .B \-c
-If specified, forces clients to authenticate by sending their RSA public key in a CLIENT_KEY message.  Client key fingerprints and proxy key fingerprints specified by -H and -j respectively will NOT be checked unless -c is specified.  Ignored if -Y is "none".
+If specified, forces clients to authenticate by sending their RSA public key in a CLIENT_KEY message.  Client key fingerprints and proxy key fingerprints specified by \-H and \-j respectively will NOT be checked unless \-c is specified.  Ignored if \-Y is "none".
 .TP
 .B \-k key_file
 .TP
 .B \-K new_key_length
-These two options are used to read and/or write the server\(aqs RSA private key.  Both are ignored if -Y is "none".
+These two options are used to read and/or write the server\(aqs RSA private key.  Both are ignored if \-Y is "none".
 
-If neither -k nor -K are specified, an RSA private key 512 bytes in length is generated.
+If neither \-k nor \-K are specified, an RSA private key 512 bytes in length is generated.
 
-If -k is specified but not -K, the RSA private key is read from key_file.
+If \-k is specified but not \-K, the RSA private key is read from key_file.
 
-If -k is not specified but -K is, an RSA private key new_key_length bytes in length is generated.
+If \-k is not specified but \-K is, an RSA private key new_key_length bytes in length is generated.
 
-If both -k and -K are specified, an RSA private key new_key_length bytes in length is generated and stored in key_file.
+If both \-k and \-K are specified, an RSA private key new_key_length bytes in length is generated and stored in key_file.
 
 The definition of key_file is dependent on the crypto library UFTP is compiled to use.
 
-On Windows systems using the native crypto library (CryptoAPI), all RSA private keys must be stored in a key container (technically only keys used to sign data, but for UFTP\(aqs purposes this is the case).  Key containers are internal to Windows, and each user (and the system) has its own set of key containers.  In this case, key_file is actually the name of the key container.  When -k is not specified, the generated key is stored in a default key container.  Note that if more than one server, client, and/or proxy use this default key container on the same machine, they will interfere with each other and the results are undefined.
+On Windows systems using the native crypto library (CryptoAPI), all RSA private keys must be stored in a key container (technically only keys used to sign data, but for UFTP\(aqs purposes this is the case).  Key containers are internal to Windows, and each user (and the system) has its own set of key containers.  In this case, key_file is actually the name of the key container.  When \-k is not specified, the generated key is stored in a default key container.  Note that if more than one server, client, and/or proxy use this default key container on the same machine, they will interfere with each other and the results are undefined.
 
-All other systems use OpenSSL for the crypto library (although under Windows UFTP can be also be built to use it).  In this case, key_file specifies a file name where the RSA private key is stored unencrypted in PEM format (the OS is expected to protect this file).  When both -k and -K are specified, the file is only written to if it does not currently exist.  If the file does exist, an error message will be returned and the server will exit.  When -k is not specified, the generated key is not persisted.  Unlike CryptoAPI, servers, clients, and proxies will not step on each other in this case.  These PEM files may also be manipulated via the openssl(1) command line tool.
+All other systems use OpenSSL for the crypto library (although under Windows UFTP can be also be built to use it).  In this case, key_file specifies a file name where the RSA private key is stored unencrypted in PEM format (the OS is expected to protect this file).  When both \-k and \-K are specified, the file is only written to if it does not currently exist.  If the file does exist, an error message will be returned and the server will exit.  When \-k is not specified, the generated key is not persisted.  Unlike CryptoAPI, servers, clients, and proxies will not step on each other in this case.  These PEM files may also be manipulated via the openssl(1) command line tool.
 
 Keys can also be generated and viewed via the uftp_keymgt(1) utility.
 .TP
@@ -83,7 +83,7 @@
 Follow symbolic links.  By default, if the server encounters a symbolic link, it will send the link itself instead of the file it points to.  Specifying this flag causes the server to send the file the link points to.
 .TP
 .B \-T
-Print the timestamp on each line of output.  If -L is specified, this option is implied.
+Print the timestamp on each line of output.  If \-L is specified, this option is implied.
 .TP
 .B \-A announce_time
 The maximum time in seconds that the server and client will spend in the Announce/Register phase or the File Info phase for each file.  Under open group membership, the server will always wait for this length of time during the Announce/Register phase to allow as many clients as possible to register.  Valid values are 1-240.  Default is 10 seconds.
@@ -117,7 +117,7 @@
 Specifies the Differentiated Services Code Point (DSCP), formerly Type of Service (TOS), in the IP header for all outgoing packets.  Valid values are 0-63 and may be specified in either decimal or hexadecimal.  Default is 0.
 
 On Windows XP systems, the OS doesn\(aqt allow this parameter to be changed by default.  To change this, add/modify the following DWORD registry value, set to 0, and reboot:
-
+.na
 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\DisableUserTOSSetting
 
 Not currently supported on Windows Vista or later.
@@ -167,7 +167,7 @@
 The UDP port number to send from.  Default is 1044.
 .TP
 .B \-j proxylist_file
-A file containing a list of proxies the server is expecting to hear from.  The file should contain the name/IP of a proxy optionally followed by the proxy\(aqs public key fingerprint, with one on each line.  If a key fingerprint is given, the key specified by the proxy must match the fingerprint.  This option should not be used without -H.  If -H is specified, -j must also be specified if proxies are expected to respond, otherwise the server will reject the proxies.
+A file containing a list of proxies the server is expecting to hear from.  The file should contain the name/IP of a proxy optionally followed by the proxy\(aqs public key fingerprint, with one on each line.  If a key fingerprint is given, the key specified by the proxy must match the fingerprint.  This option should not be used without \-H.  If \-H is specified, \-j must also be specified if proxies are expected to respond, otherwise the server will reject the proxies.
 
 .nf
 Example contents:
@@ -176,10 +176,10 @@
 .fi
 .TP
 .B \-q
-Quit-on-error flag.  Normally, the server will continue with a session as long as at least one client is still active.  With this flag, the server will quit if any client aborts, drops out, or never responds.  Most useful in conjunction with clients using the temp directory option (-T) so that clients that successfully receive at least one file before being told to abort don\(aqt have files from an aborted session in the destination directory.
+Quit-on-error flag.  Normally, the server will continue with a session as long as at least one client is still active.  With this flag, the server will quit if any client aborts, drops out, or never responds.  Most useful in conjunction with clients using the temp directory option (\-T) so that clients that successfully receive at least one file before being told to abort don\(aqt have files from an aborted session in the destination directory.
 .TP
 .B \-f
-Restartable flag.  If specified, and at least one client fails to receive all files, the server will write a restart file named "_group_{group ID}_restart in the current directory to save the current state, which includes the group ID, list of files, and list of failed clients.  This file can then be passed to -F to restart the failed transfer.
+Restartable flag.  If specified, and at least one client fails to receive all files, the server will write a restart file named "_group_{group ID}_restart in the current directory to save the current state, which includes the group ID, list of files, and list of failed clients.  This file can then be passed to \-F to restart the failed transfer.
 .TP
 .B \-y
 For Windows systems using CryptoAPI, private keys are normally stored in the key container of the running user.  Specifying this option stores keys in the system key container.  On non-Windows systems, this option has no effect.
@@ -193,7 +193,7 @@
 Besides name/IP, clients may also be specified by unique ID.  This ID may be specified either as a 6 digit hexadecimal number (0xnnnnnn) or as an IP address of the form 0.n.n.n.
 .TP
 .B \-F restart_file
-Specifies the name of a restart file to use to resume a failed transfer.  If specified, -H may not be specified and all files listed to send will be ignored, since the restart file contains both of these.  All other command line options specified on the first attempt are not automatically applied, so you can alter then for the next attempt if need be.
+Specifies the name of a restart file to use to resume a failed transfer.  If specified, \-H may not be specified and all files listed to send will be ignored, since the restart file contains both of these.  All other command line options specified on the first attempt are not automatically applied, so you can alter then for the next attempt if need be.
 .TP
 .B \-X exclude_file
 A file containing the names of files/paths to be excluded from the session, one per line.  For example, if you send a directory called d1 containing subdirectories d2, d3, and d4, and you don\(aqt want to send the contents of d4, the exclude_file should contain a line reading "d1/d4".
@@ -202,10 +202,10 @@
 The public multicast address to announce on.  Default is 230.4.4.1.
 .TP
 .B \-P priv_multicast_addr
-The private multicast address that the data is transferred to.  Any combination of the second, third, and fourth octets may be replaced with the letter \(aqx\(aq, resulting in a random number being chosen for that octet.  Default value is 230.5.5.x.  If clients are using source specific multicast (SSM), this and -M must specify valid SSM addresses, which fall in the range 232.0.0.0-232.255.255.255.
+The private multicast address that the data is transferred to.  Any combination of the second, third, and fourth octets may be replaced with the letter \(aqx\(aq, resulting in a random number being chosen for that octet.  Default value is 230.5.5.x.  If clients are using source specific multicast (SSM), this and \-M must specify valid SSM addresses, which fall in the range 232.0.0.0-232.255.255.255.
 .TP
 .B \-C cc_config
-Specifies a congestion control config file.  Normally, the server always transmits at the speed specified by -R.  With this option, the speed can be adjusted each time the server makes a request for NAKs from the clients based on the percentage of NAKs received to data packets sent. The file consists of one or more of the following lines:
+Specifies a congestion control config file.  Normally, the server always transmits at the speed specified by \-R.  With this option, the speed can be adjusted each time the server makes a request for NAKs from the clients based on the percentage of NAKs received to data packets sent. The file consists of one or more of the following lines:
 
 percentage;scaling_factor
 
@@ -227,21 +227,21 @@
 .B \-o
 .TP
 .B \-D dest_name
-These options specify the name given to the sent file(s) on the client side.  If only one file/directory is specified to send and -o is not specified, the name spcified by -D is given to that file/directory, and the effects of -E are ignored.  If more than one file/directory is specified to send, or if -o is specified, they are placed in a subdirectory with the name spcified by -D.
+These options specify the name given to the sent file(s) on the client side.  If only one file/directory is specified to send and \-o is not specified, the name spcified by \-D is given to that file/directory, and the effects of \-E are ignored.  If more than one file/directory is specified to send, or if \-o is specified, they are placed in a subdirectory with the name spcified by \-D.
 
 This option may also specify an absolute path name.  If so, clients must be either all Windows or all UNIX-like, since they have differing filesystem structures, otherwise the behavior is undefined.  The server, however, need not be the same OS as the clients.  When specifying an absolute path name, the path must be contained in one of a client\(aqs destination directories, otherwise the client will reject the file.  When sending to Windows clients, an absolute path may be either local (drive:\\path\\to\\file) or remote (\\\\host\\share\\path\\to\\file).
 .TP
 .B
--E base_dir[,base_dir...]
+\-E base_dir[,base_dir...]
 Specifies one or more "base" directories for files.  Normally, for any file/directory specified, any leading path elements are stripped from the name before sending. If the specified file/directory name matches one of the base directories, only the path elements of the base directory are stripped, and the remainder is sent as the file name.  Any specified file/directory that does not match a base directory is skipped.
 
-For example, without -E, if you pass /path/to/file to send, the transmitted filename is file.  If you pass in -E /path, the transmitted file name is to/file.
+For example, without \-E, if you pass /path/to/file to send, the transmitted filename is file.  If you pass in \-E /path, the transmitted file name is to/file.
 .TP
 .B \-i list_file
-Name of a file containing a list of files to send, one per line.  Empty lines are ignored.  Passing in \(aq-\(aq for list_file reads files from stdin.  Other files specified on the command line are ignored if -i is given.
+Name of a file containing a list of files to send, one per line.  Empty lines are ignored.  Passing in \(aq-\(aq for list_file reads files from stdin.  Other files specified on the command line are ignored if \-i is given.
 .TP
 .B file [ file...]
-The file(s) or directory(ies) to send.  Any special files (block/character devices, pipes, sockets, etc.) are skipped.  By default, any symbolic links are sent as links (see -l).  Any Windows client will silently refuse to create them.  If -F or -i is specified, any files listed will be ignored.
+The file(s) or directory(ies) to send.  Any special files (block/character devices, pipes, sockets, etc.) are skipped.  By default, any symbolic links are sent as links (see \-l).  Any Windows client will silently refuse to create them.  If \-F or \-i is specified, any files listed will be ignored.
 .SH EXAMPLES
 .P
 Starting with the default options:
@@ -255,12 +255,12 @@
 If you were sending a file over a local LAN instead of satellite, you might call the server like this:
 
 .RS 5
-uftp -R 50000 -A 3 -S 3 -a 500 -s 500 -r 1000 -d 1000 the_file
+uftp \-R 50000 \-A 3 \-S 3 \-a 500 \-s 500 \-r 1000 \-d 1000 the_file
 .RE
 
 This shortens the timeouts for each message type and cuts down the time the server waits during each phase, and sends the file at 50000 Kbps (~50 Mbps).
 
-If you have a large number of clients you might need to specify larger values for -A and -S to ensure the server has time to handle them all.  As a general rule, if you need to specify any one of -A, -S, -a, -s, -r, or -d, it\(aqs probably a good idea to specify them all.
+If you have a large number of clients you might need to specify larger values for \-A and \-S to ensure the server has time to handle them all.  As a general rule, if you need to specify any one of \-A, \-S, \-a, \-s, \-r, or \-d, it\(aqs probably a good idea to specify them all.
 
 To send multiple files:
 
@@ -277,49 +277,49 @@
 To send multiple files that all land in a certain subdirectory on each client:
 
 .RS 5
-uftp -D dest_dir file_1 file_2
+uftp \-D dest_dir file_1 file_2
 .RE
 
 To send announcements over multicast address 224.1.2.3 and later messages over 224.4.5.6:
 
 .RS 5
-uftp -M 224.1.2.3 -P 224.4.5.6 file
+uftp \-M 224.1.2.3 \-P 224.4.5.6 file
 .RE
 
 To send only to certain hosts:
 
 .RS 5
-uftp -H host_name_1,host_ip_2,host_name_3 file_to_send
+uftp \-H host_name_1,host_ip_2,host_name_3 file_to_send
 .RE
 
 or:
 
 .RS 5
-uftp -H @file_containing_list_of_hosts file_to_send
+uftp \-H @file_containing_list_of_hosts file_to_send
 .RE
 
 If you want to use jumbo ethernet frames of 8800 bytes:
 
 .RS 5
-uftp -b 8800 file_to_send
+uftp \-b 8800 file_to_send
 .RE
 
 To send /path/to/file1 and /path/to/file2, and have them appear on clients as /remote/dir/to/file1 and /remote/dir/to/file2:
 
 .RS 5
-uftp -E /path -D /remote/dir /path/to/file1 /path/to/file2
+uftp \-E /path \-D /remote/dir /path/to/file1 /path/to/file2
 .RE
 
 To send a file encrypted with AES-256 and SHA-1 hashing, using an autogenerated 512-bit RSA key to negotiate the session:
 
 .RS 5
-uftp -Y AES256 -h SHA1 file_to_send
+uftp \-Y AES256 \-h SHA1 file_to_send
 .RE
 
 To do the above with a previously generated RSA key stored in key_file_or_container (under Windows, the name of an internal key container, otherwise the name of a file containing the key in PEM format):
 
 .RS 5
-uftp -Y AES256 -h SHA1 -k key_file_or_container file_to_send
+uftp \-Y AES256 \-h SHA1 \-k key_file_or_container file_to_send
 .RE
 .SH SEE ALSO
 uftpd(1), uftpproxyd(1), uftp_keymgt(1)
Index: uftp-3.5.1/uftpproxyd.1
===================================================================
--- uftp-3.5.1.orig/uftpproxyd.1	2011-12-18 23:21:48.828685963 -0800
+++ uftp-3.5.1/uftpproxyd.1	2011-12-18 23:22:39.178431487 -0800
@@ -1,17 +1,17 @@
 .TH uftpproxyd 1 "10 July 2011" "UFTP 3.5.1"
 .SH NAME
-uftpproxyd - Encrypted UDP based ftp with multicast - proxy daemon
+uftpproxyd \- Encrypted UDP based ftp with multicast \- proxy daemon
 .SH SYNOPSIS
-uftpproxyd { -s { dest | fp=fingerprint } | -c | -r } [ -d ]
-    [ -n ] [ -p port ] [ -t ttl ] [ -Q dscp ]
-    [ -O out_multi_interface ] [ -U UID ] [ -q dest_port ]
-    [ -T interval_pct ] [ -m ] [ -x log_level ]
-    [ -H hb_server[:port][,hb_server[:port]...] ]
-    [ -h hb_interval ] [ -B udp_buf_size ] [ -L logfile ]
-    [ -P pidfile ] [ -C clientlist_file ]
-    [ -S serverlist_file ] [ -k keyfile[,keyfile...] ]
-    [ -K new_key_length ] [ -I interface[,interface...] ]
-    [ -M pub_mcast_addr[,pub_mcast_addr...] ]
+uftpproxyd { \-s { dest | fp=fingerprint } | \-c | \-r } [ \-d ]
+    [ \-n ] [ \-p port ] [ \-t ttl ] [ \-Q dscp ]
+    [ \-O out_multi_interface ] [ \-U UID ] [ \-q dest_port ]
+    [ \-T interval_pct ] [ \-m ] [ \-x log_level ]
+    [ \-H hb_server[:port][,hb_server[:port]...] ]
+    [ \-h hb_interval ] [ \-B udp_buf_size ] [ \-L logfile ]
+    [ \-P pidfile ] [ \-C clientlist_file ]
+    [ \-S serverlist_file ] [ \-k keyfile[,keyfile...] ]
+    [ \-K new_key_length ] [ \-I interface[,interface...] ]
+    [ \-M pub_mcast_addr[,pub_mcast_addr...] ]
 .SH DESCRIPTION
 .P
 uftpproxyd is the proxy daemon of the UFTP suite.  It performs multicast tunneling, NAT traversal, and client response aggregation.  It is used in one of two scenarios.  The first is when the server and one or more clients are on separate networks and cannot be reached directly via multicast, and/or one or both sides are behind a firewall or NAT\(aqed.  This allows applications to function when there is little to no access to routers.  The second is when the server can contact clients directly but there are too many of them to directly handle the responses.  This allows greater scalability.
@@ -148,7 +148,7 @@
 x  | Client |  | Client |  x || x  | Client |  | Client |  x
 x  ----------  ----------  x || x  ----------  ----------  x
 x       |           |      x || x       |           |      x
-x       -------------------x-||-x--------------------      x
+x       ------------------\-x-||\-x--------------------      x
 x                          x    x                          x
 xxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxxxxxx
 .fi
@@ -162,7 +162,7 @@
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 x                Network A   x
 x   ----------               x
-x ->| Server |<--------------x----------------
+x ->| Server |<-------------\-x----------------
 x | ----------               x               |
 x |      |                   x               |
 x |      |  multicast        x               |
@@ -181,7 +181,7 @@
 x | |  ------------------  x    x  |   ------------------  x
 x | |    |       ^         x    x  |           ^           x
 x |/|\\----       |         x    x  |           |           x
-x   |            |         x  --x-/|\\-----------           x
+x   |            |         x  -\-x-/|\\-----------           x
 x   |            |         x  | x  |                       x
 x   |            |         x  | x  |                       x
 xxxxxxxxxxxxxxxxxxxxxxxxxxxx  | xxxxxxxxxxxxxxxxxxxxxxxxxxxx
@@ -198,9 +198,9 @@
 x  | Client |  | Client |  x || x  | Client |  | Client |  x
 x  ----------  ----------  x || x  ----------  ----------  x
 x       |           |      x || x       |           |      x
-x       -------------------x-||-x--------------------      x
+x       ------------------\-x-||\-x--------------------      x
 x                          x    x                          x
-xxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxxxxxx
+xxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxxxxxx.\"
 .fi
 
 .P
@@ -211,16 +211,16 @@
 The following options are supported:
 .TP
 .B \-s { dest | fp=fingerprint }
-Sets up the proxy as a server proxy.  If dest is specified, this is the name/IP of the downstream client proxy.  If fingerprint is specified, this designates the public key signature of the downstream proxy.  When this proxy gets a heartbeat message signed with the matching key, it will use the source IP:port of the heartbeat for its downstream address.  Exactly one of -s, -c, or -r must be specified.
+Sets up the proxy as a server proxy.  If dest is specified, this is the name/IP of the downstream client proxy.  If fingerprint is specified, this designates the public key signature of the downstream proxy.  When this proxy gets a heartbeat message signed with the matching key, it will use the source IP:port of the heartbeat for its downstream address.  Exactly one of \-s, \-c, or \-r must be specified.
 .TP
 .B \-c
-Sets up the proxy as a client proxy.  Exactly one of -s, -c, or -r must be specified.
+Sets up the proxy as a client proxy.  Exactly one of \-s, \-c, or \-r must be specified.
 .TP
 .B \-r
-Sets up the proxy as a response proxy.  Exactly one of -s, -c, or -r must be specified.
+Sets up the proxy as a response proxy.  Exactly one of \-s, \-c, or \-r must be specified.
 .TP
 .B \-d
-Enable debug mode.  The process will run in the foreground and all output will go to stderr.  If specified, the -L option is ignored.
+Enable debug mode.  The process will run in the foreground and all output will go to stderr.  If specified, the \-L option is ignored.
 .TP
 .B \-n
 Prevents name lookups of servers, clients, or other proxies when receiving messages.  Useful if name resolution takes a long time and delays message forwarding.  This option does NOT prevent name lookups for clients, servers, or proxies specified by any other command line options.
@@ -249,11 +249,11 @@
 .B \-x log_level
 Specifies current logging level.  Valid values are 0-5, with 0 being the least verbose and 5 being the most verbose.  Default is 2, which is consistent with logging prior to version 3.5.
 .TP
-.B -H hb_server[:port][,hb_server[:port]...]
-Lists one or more proxies to send heartbeat messages to.  When sending a signed heartbeat message, the first key listed under -k is used to sign the message.  If port is not specified for a given proxy, the default port of 1044 is assumed.
+.B \-H hb_server[:port][,hb_server[:port]...]
+Lists one or more proxies to send heartbeat messages to.  When sending a signed heartbeat message, the first key listed under \-k is used to sign the message.  If port is not specified for a given proxy, the default port of 1044 is assumed.
 .TP
-.B -h hb_interval
-The time in seconds between sending heartbeat messages.  Ignored if -H is not specified.
+.B \-h hb_interval
+The time in seconds between sending heartbeat messages.  Ignored if \-H is not specified.
 .TP
 .B \-B buf_size
 The size in bytes of the UDP send buffer and receive buffer to use.  Valid values are 65536-104857600 (64KB-100MB).  Defaults to 262144.
@@ -265,7 +265,7 @@
 Specifies the Differentiated Services Code Point (DSCP), formerly Type of Service (TOS), in the IP header for all outgoing packets.  Valid values are 0-63 and may be specified in either decimal or hexadecimal.  Default is 0.
 
 On Windows XP systems, the OS doesn\(aqt allow this parameter to be changed by default.  To change this, add/modify the following DWORD registry value, set to 0, and reboot:
-
+.na
 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\DisableUserTOSSetting
 
 Not currently supported on Windows Vista or later.
@@ -282,9 +282,9 @@
 .fi
 .TP
 .B \-S serverlist_file
-A file containing a list of servers.  The file should contain the name/IP of a server optionally followed by the server\(aqs public key fingerprint, with one on each line.  For client proxies, this is the list of servers the proxy will allow to connect, and the key specified by the server must match the fingerprint.  For server proxies, ff your system supports source specific multicast (SSM), the proxy will subscribe to all public and private multicast addresses using SSM for all servers listed.  See -C for the syntax of the file.
+A file containing a list of servers.  The file should contain the name/IP of a server optionally followed by the server\(aqs public key fingerprint, with one on each line.  For client proxies, this is the list of servers the proxy will allow to connect, and the key specified by the server must match the fingerprint.  For server proxies, ff your system supports source specific multicast (SSM), the proxy will subscribe to all public and private multicast addresses using SSM for all servers listed.  See \-C for the syntax of the file.
 
-When this option is specified, the public address given by -M must be a valid SSM address.  Any ANNOUNCE that specifies a private IP that is not a valid SSM address will be rejected.  Valid SSM addresses are in the range 232.0.0.0-232.255.255.255.
+When this option is specified, the public address given by \-M must be a valid SSM address.  Any ANNOUNCE that specifies a private IP that is not a valid SSM address will be rejected.  Valid SSM addresses are in the range 232.0.0.0-232.255.255.255.
 
 .TP
 .B \-k keyfile[,keyfile...]
@@ -292,19 +292,19 @@
 .B \-K new_key_length
 These two options are used to read and/or write the proxy\(aqs RSA private key.
 
-If neither -k nor -K are specified, an RSA private key 512 bytes in length is generated.
+If neither \-k nor \-K are specified, an RSA private key 512 bytes in length is generated.
 
-If -k is specified but not -K, the RSA private keys are read from each keyfile.
+If \-k is specified but not \-K, the RSA private keys are read from each keyfile.
 
-If -k is not specified but -K is, an RSA private key new_key_length bytes in length is generated.
+If \-k is not specified but \-K is, an RSA private key new_key_length bytes in length is generated.
 
-If both -k and -K are specified, an RSA private key new_key_length bytes in length is generated and stored in the first keyfile, and subsequent key files are ignored.
+If both \-k and \-K are specified, an RSA private key new_key_length bytes in length is generated and stored in the first keyfile, and subsequent key files are ignored.
 
 The definition of keyfile is dependent on the crypto library UFTP is compiled to use.
 
-On Windows systems using the native crypto library (CryptoAPI), all RSA private keys must be stored in a key container (technically only keys used to sign data, but for UFTP\(aqs purposes this is the case).  Key containers are internal to Windows, and each user (and the system) has its own set of key containers.  In this case, keyfile is actually the name of the key container.  When -k is not specified, the generated key is stored in a default key container.  Note that if more than one server, client, and/or proxy use this default key container on the same machine, they will interfere with each other and the results are undefined.
+On Windows systems using the native crypto library (CryptoAPI), all RSA private keys must be stored in a key container (technically only keys used to sign data, but for UFTP\(aqs purposes this is the case).  Key containers are internal to Windows, and each user (and the system) has its own set of key containers.  In this case, keyfile is actually the name of the key container.  When \-k is not specified, the generated key is stored in a default key container.  Note that if more than one server, client, and/or proxy use this default key container on the same machine, they will interfere with each other and the results are undefined.
 
-All other systems use OpenSSL for the crypto library (although under Windows UFTP can be also be built to use it).  In this case, keyfile specifies a file name where the RSA private key is stored unencrypted in PEM format (the OS is expected to protect this file).  When both -k and -K are specified, the file is only written to if it does not currently exist.  If the file does exist, an error message will be returned and the proxy will exit.  When -k is not specified, the generated key is not persisted.  Unlike CryptoAPI, servers, clients, and proxies will not step on each other in this case.  These PEM files may also be manipulated via the openssl(1) command line tool.
+All other systems use OpenSSL for the crypto library (although under Windows UFTP can be also be built to use it).  In this case, keyfile specifies a file name where the RSA private key is stored unencrypted in PEM format (the OS is expected to protect this file).  When both \-k and \-K are specified, the file is only written to if it does not currently exist.  If the file does exist, an error message will be returned and the proxy will exit.  When \-k is not specified, the generated key is not persisted.  Unlike CryptoAPI, servers, clients, and proxies will not step on each other in this case.  These PEM files may also be manipulated via the openssl(1) command line tool.
 
 Keys can also be generated and viewed via the uftp_keymgt(1) utility.
 .TP
Index: uftp-3.5.1/uftpd.1
===================================================================
--- uftp-3.5.1.orig/uftpd.1	2011-12-18 23:21:48.818686014 -0800
+++ uftp-3.5.1/uftpd.1	2011-12-18 23:23:01.438319027 -0800
@@ -1,16 +1,16 @@
 .TH uftpd 1 "10 July 2011" "UFTP 3.5.1"
 .SH NAME
-uftpd - Encrypted UDP based ftp with multicast - client daemon
+uftpd \- Encrypted UDP based ftp with multicast \- client daemon
 .SH SYNOPSIS
-uftpd [ -d ] [ -n ] [ -p port ] [ -B buf_size ]
-    [ -E ] [ -Q dscp ] [ -U UID ] [ -x log_level ] [ -t ]
-    [ -T temp_dir ] [ -D dest_dir[,dest_dir... ]]
-    [ -A backup_dir[,backup_dir... ]] [ -L logfile ]
-    [ -P pidfile ] [ -S serverlist_file ] [ -R proxy[/fp] ]
-    [ -k keyfile[,keyfile...] ] [ -K new_key_length ]
-    [ -m ] [ -H hb_server[:port][,hb_server[:port]...] ]
-    [ -h hb_interval ] [ -I interface[,interface...] ]
-    [ -M pub_mcast_addr[,pub_mcast_addr...] ]
+uftpd [ \-d ] [ \-n ] [ \-p port ] [ \-B buf_size ]
+    [ \-E ] [ \-Q dscp ] [ \-U UID ] [ \-x log_level ] [ \-t ]
+    [ \-T temp_dir ] [ \-D dest_dir[,dest_dir... ]]
+    [ \-A backup_dir[,backup_dir... ]] [ \-L logfile ]
+    [ \-P pidfile ] [ \-S serverlist_file ] [ \-R proxy[/fp] ]
+    [ \-k keyfile[,keyfile...] ] [ \-K new_key_length ]
+    [ \-m ] [ \-H hb_server[:port][,hb_server[:port]...] ]
+    [ \-h hb_interval ] [ \-I interface[,interface...] ]
+    [ \-M pub_mcast_addr[,pub_mcast_addr...] ]
 .SH DESCRIPTION
 .P
 uftpd is the client daemon of the UFTP suite.  It listens on one or more multicast addresses to receive files from servers.
@@ -22,7 +22,7 @@
 The following options are supported:
 .TP
 .B \-d
-Enable debug mode.  The process will run in the foreground and all output will go to stderr.  If specified, the -L option is ignored.
+Enable debug mode.  The process will run in the foreground and all output will go to stderr.  If specified, the \-L option is ignored.
 .TP
 .B \-n
 Prevents name lookups of the server.  Useful if name resolution takes a long time and delays sending of the registration message.
@@ -43,7 +43,7 @@
 Specifies the Differentiated Services Code Point (DSCP), formerly Type of Service (TOS), in the IP header for all outgoing packets.  Valid values are 0-63 and may be specified in either decimal or hexadecimal.  Default is 0.
 
 On Windows XP systems, the OS doesn\(aqt allow this parameter to be changed by default.  To change this, add/modify the following DWORD registry value, set to 0, and reboot:
-
+.na
 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\DisableUserTOSSetting
 
 Not currently supported on Windows Vista or later.
@@ -52,14 +52,14 @@
 Specifies current logging level.  Valid values are 0-5, with 0 being the least verbose and 5 being the most verbose.  Default is 2, which is consistent with logging prior to version 3.5.
 .TP
 .B \-t
-Receive each file into a temp file in the same directory as the destination file.  The temp file will have an extension of .~uftp-{group-id}-{file-id}, where {group-id} and {file-id} are the group ID of the current session and file ID of the current file.  If -A is also specified, the existing destination file is not moved to backup directory until after the file is fully received.
+Receive each file into a temp file in the same directory as the destination file.  The temp file will have an extension of .~uftp-{group-id}-{file-id}, where {group-id} and {file-id} are the group ID of the current session and file ID of the current file.  If \-A is also specified, the existing destination file is not moved to backup directory until after the file is fully received.
 .TP
 .B \-T temp_dir
 Temp directory in which files are received, then moved to dest_dir when the session is complete.  If omitted, files are received directly into dest_dir.  Must reside on the same filesystem as the destination directory.
 
-The -T option MUST be specified to allow the client to save the state of failed file transfers that can be resumed later.
+The \-T option MUST be specified to allow the client to save the state of failed file transfers that can be resumed later.
 
-Not compatible -A or -t.  Not compatible with -D when multiple destination directories are specified.  Also, no incoming files with an absolute path will be accepted if this option is specified.
+Not compatible \-A or \-t.  Not compatible with \-D when multiple destination directories are specified.  Also, no incoming files with an absolute path will be accepted if this option is specified.
 
 IMPORTANT: When full directories are received, the entire directory is moved at once to the destination directory, removing any existing file/directory.  This means that if an existing directory in dest_dir is the same name as a directory received into temp_dir, all files under the existing directory are deleted. 
 .TP
@@ -71,7 +71,7 @@
 
 For example, if /full/path/to/file would be overwritten, it is moved to {backup_dir}/YYYYMMDD/HHMMSS/full/path/to/file.  Under Windows, drive letters for local files are not part of the name, but host/share names for network files are.  So C:\\path\\to\\file would be backed up to {backup_dir}\\YYYYMMDD\\HHMMSS\\path\\to\\file, and \\\\host\\share\\path\\to\\file would be backed up to {backup_dir}\\YYYYMMDD\\HHMMSS\\host\\share\\path\\to\\file.
 
-Not compatible with -T.
+Not compatible with \-T.
 .TP
 .B \-L logfile
 Specifies the log file.  Default is /tmp/uftpd.log for UNIX-like systems systems, C:\\uftpd_log.txt for Windows.
@@ -82,7 +82,7 @@
 .B \-S serverlist_file
 A file containing a list of servers the client will allow to send files to it.  The file should contain the name/IP of a server optionally followed by the server\(aqs public key fingerprint, with one on each line.  If a key fingerprint is given, the key specified by the server must match the fingerprint.  If your system supports source specific multicast (SSM), the client will subscribe to all public and private multicast addresses using SSM for all servers listed.
 
-When this option is specified, the public address given by -M must be a valid SSM address.  Any ANNOUNCE that specifies a private IP that is not a valid SSM address will be rejected.  Valid SSM addresses are in the range 232.0.0.0-232.255.255.255.
+When this option is specified, the public address given by \-M must be a valid SSM address.  Any ANNOUNCE that specifies a private IP that is not a valid SSM address will be rejected.  Valid SSM addresses are in the range 232.0.0.0-232.255.255.255.
 
 .nf
 Example contents:
@@ -100,31 +100,31 @@
 .B \-K new_key_length
 These two options are used to read and/or write the client\(aqs RSA private key.
 
-If neither -k nor -K are specified, an RSA private key 512 bytes in length is generated.
+If neither \-k nor \-K are specified, an RSA private key 512 bytes in length is generated.
 
-If -k is specified but not -K, the RSA private keys are read from each keyfile.
+If \-k is specified but not \-K, the RSA private keys are read from each keyfile.
 
-If -k is not specified but -K is, an RSA private key new_key_length bytes in length is generated.
+If \-k is not specified but \-K is, an RSA private key new_key_length bytes in length is generated.
 
-If both -k and -K are specified, an RSA private key new_key_length bytes in length is generated and stored in the first keyfile, and subsequent key files are ignored.
+If both \-k and \-K are specified, an RSA private key new_key_length bytes in length is generated and stored in the first keyfile, and subsequent key files are ignored.
 
 The definition of keyfile is dependent on the crypto library UFTP is compiled to use.
 
-On Windows systems using the native crypto library (CryptoAPI), all RSA private keys must be stored in a key container (technically only keys used to sign data, but for UFTP\(aqs purposes this is the case).  Key containers are internal to Windows, and each user (and the system) has its own set of key containers.  In this case, keyfile is actually the name of the key container.  When -k is not specified, the generated key is stored in a default key container.  Note that if more than one server, client, and/or proxy use this default key container on the same machine, they will interfere with each other and the results are undefined.
+On Windows systems using the native crypto library (CryptoAPI), all RSA private keys must be stored in a key container (technically only keys used to sign data, but for UFTP\(aqs purposes this is the case).  Key containers are internal to Windows, and each user (and the system) has its own set of key containers.  In this case, keyfile is actually the name of the key container.  When \-k is not specified, the generated key is stored in a default key container.  Note that if more than one server, client, and/or proxy use this default key container on the same machine, they will interfere with each other and the results are undefined.
 
-All other systems use OpenSSL for the crypto library (although under Windows UFTP can be also be built to use it).  In this case, keyfile specifies a file name where the RSA private key is stored unencrypted in PEM format (the OS is expected to protect this file).  When both -k and -K are specified, the file is only written to if it does not currently exist.  If the file does exist, an error message will be returned and the client will exit.  When -k is not specified, the generated key is not persisted.  Unlike CryptoAPI, servers, clients, and proxies will not step on each other in this case.  These PEM files may also be manipulated via the openssl(1) command line tool.
+All other systems use OpenSSL for the crypto library (although under Windows UFTP can be also be built to use it).  In this case, keyfile specifies a file name where the RSA private key is stored unencrypted in PEM format (the OS is expected to protect this file).  When both \-k and \-K are specified, the file is only written to if it does not currently exist.  If the file does exist, an error message will be returned and the client will exit.  When \-k is not specified, the generated key is not persisted.  Unlike CryptoAPI, servers, clients, and proxies will not step on each other in this case.  These PEM files may also be manipulated via the openssl(1) command line tool.
 
 Keys can also be generated and viewed via the uftp_keymgt(1) utility.
 .TP
 .B \-m
 For Windows systems using CryptoAPI, private keys are normally stored in the key container of the running user.  Specifying this option stores keys in the system key container.  Useful when running as a service.  On non-Windows systems, this option has no effect.
 .TP
-.B -H hb_server[:port][,hb_server[:port]...]
+.B \-H hb_server[:port][,hb_server[:port]...]
 Lists one or more proxies to send heartbeat messages to.  When sending a signed
-heartbeat message, the first key listed under -k is used to sign the message.  If port is not specified for a given proxy, the default port of 1044 is assumed.
+heartbeat message, the first key listed under \-k is used to sign the message.  If port is not specified for a given proxy, the default port of 1044 is assumed.
 .TP
-.B -h hb_interval
-The time in seconds between sending heartbeat messages.  Ignored if -H is not specified.
+.B \-h hb_interval
+The time in seconds between sending heartbeat messages.  Ignored if \-H is not specified.
 .TP
 .B \-I interface[,interface...]
 Lists one or more interfaces to listen to multicast traffic on.  Interfaces can be specified either by interface name, by hostname, or by IP.  When receiving a closed group membership request, the client will participate if any of these interfaces matches an IP in the announcement.  When receiving an open group membership request, the first interface listed is the one the client will report back to the server.  This may not necessarily be the interface that the ANNOUNCE was received on.  The default is to listen on all active non-loopback interfaces.  NOTE: Since Windows doesn\(aqt have named interfaces (not in the sense that UNIX-like systems do), only hostnames or IP addresses are accepted on Windows.
@@ -144,25 +144,25 @@
 Suppose you want an external process to handle incoming files in /tmp/dest.  Since you don\(aqt want to pick up incomplete files, you might want them to be received into /tmp/receiving then moved to /tmp/dest when done.  Then call the client like this:
 
 .RS 5
-uftpd -D /tmp/dest -T /tmp/receiving
+uftpd \-D /tmp/dest \-T /tmp/receiving
 .RE
 
 If the client expects to receive from different servers, one sending on 230.4.4.1 and one sending on 230.4.4.2:
 
 .RS 5
-uftpd -M 230.4.4.1,230.4.4.2
+uftpd \-M 230.4.4.1,230.4.4.2
 .RE
 
 To handle incoming encrypted sessions with differing RSA key sizes:
 
 .RS 5
-uftpd -k file_for_1024_bit_key,file_for_2048_bit_key
+uftpd \-k file_for_1024_bit_key,file_for_2048_bit_key
 .RE
 
 If incoming packets aren\(aqt being read quickly enough, and you want to increase the UDP receive buffer size to 2 MB:
 
 .RS 5
-uftpd -B 2097152
+uftpd \-B 2097152
 .RE
 
 .SH SEE ALSO
Index: uftp-3.5.1/uftp_keymgt.1
===================================================================
--- uftp-3.5.1.orig/uftp_keymgt.1	2011-12-18 23:21:48.858685810 -0800
+++ uftp-3.5.1/uftp_keymgt.1	2011-12-18 23:21:53.868660483 -0800
@@ -1,12 +1,12 @@
 .TH uftp_keymgt 1 "10 July 2011" "UFTP 3.5.1"
 .SH NAME
-uftp_keymgt - Encrypted UDP based ftp with multicast - key management utility
+uftp_keymgt \- Encrypted UDP based ftp with multicast \- key management utility
 .SH SYNOPSIS
-uftp_keymgt [ -m ] [ key_file [ key_file ...] ]
+uftp_keymgt [ \-m ] [ key_file [ key_file ...] ]
 
-uftp_keymgt [ -m ] -g key_size key_file
+uftp_keymgt [ \-m ] \-g key_size key_file
 
-uftp_keymgt [ -m ] -d key_file
+uftp_keymgt [ \-m ] \-d key_file
 
 .SH DESCRIPTION
 .P
@@ -18,11 +18,11 @@
 
 All other systems use OpenSSL for the crypto library (although under Windows UFTP can be also be built to use it).  In this case, key_file specifies a file name where the RSA private key is stored unencrypted in PEM format (the OS is expected to protect this file).
 
-The -g option is used to generate a key of a given size and store it in the given key_file.  The key size and key fingerprint are then printed.  Under OpenSSL, a key can actually be generated by the openssl(1) command line utility, although you\(aqll still need to run uftp_keymgt on it to see the fingerprint.
+The \-g option is used to generate a key of a given size and store it in the given key_file.  The key size and key fingerprint are then printed.  Under OpenSSL, a key can actually be generated by the openssl(1) command line utility, although you\(aqll still need to run uftp_keymgt on it to see the fingerprint.
 
-The -d option is available only on Windows systems using CryptoAPI.  It deletes the key container specified by key_file.
+The \-d option is available only on Windows systems using CryptoAPI.  It deletes the key container specified by key_file.
 
-When neither -g or -d are specified, the size and fingerprint of all keys listed are printed.  If no keys are specified under Windows with CryptoAPI, the private key for all key containers for the current user are printed.  Note that some key containers may exist that an application other than UFTP is using, and some of those may not have an RSA private key.
+When neither \-g or \-d are specified, the size and fingerprint of all keys listed are printed.  If no keys are specified under Windows with CryptoAPI, the private key for all key containers for the current user are printed.  Note that some key containers may exist that an application other than UFTP is using, and some of those may not have an RSA private key.
 
 .SH OPTIONS
 .P
